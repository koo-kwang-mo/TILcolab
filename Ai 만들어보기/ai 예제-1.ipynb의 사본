{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyPLLMWNZGid0oJOIEWOAg2f"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["텐서플로"],"metadata":{"id":"vVITyTA1Seyy"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"BTryOt4DNZ8v"},"outputs":[],"source":["%tensorflow_version 2.x"]},{"cell_type":"markdown","source":["tensorflow와 tf.keras를 임포트합니다"],"metadata":{"id":"O1rDXzXESk_x"}},{"cell_type":"code","source":["from __future__ import absolute_import, division, print_function, unicode_literals\n","\n","import tensorflow as tf\n","from tensorflow import keras\n","\n","print(tf.__version__)\n","print(keras.__version__)\n"],"metadata":{"id":"XFftChFFSeKT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 데이터 준비하기\n","\n","MNIST 데이터셋을 읽어옵니다. "],"metadata":{"id":"5RT1HvytSrgt"}},{"cell_type":"code","source":["mnist = tf.keras.datasets.mnist\n","\n","(x_train, y_train), (x_test, y_test) = mnist.load_data()"],"metadata":{"id":"hEBRKxHmSnu7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train.shape, y_train.shape"],"metadata":{"id":"HK8JMYWVStX1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["위의 이미지 데이터는 그림과 같은 형태입니다. 배경은 0이고 그레이스케일로 `에서 255까지의 값이 있는 부분이 글씨입니다. 첫번째 이미지를 확인해 보겠습니다."],"metadata":{"id":"ZZKjT8dkS3uh"}},{"cell_type":"code","source":["print(x_train[0])"],"metadata":{"id":"aUMb3u0YSwSP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["신경망을 훈련하기 전에 이 데이터를 각 픽셀이 0에서 1까지의 값을 갖도록 바꾸어 줍니다.\n"],"metadata":{"id":"dE6Af0sYS94x"}},{"cell_type":"markdown","source":["이 데이터를 사진 이미지로 볼수 있을까요? 네 어렵지 않습니다. 파이썬의 matplotlib이라는 라이브러리를 쓰면 됩니다. import 명령어를 써서 라이브러리를 가져오고 plt 라는 이름을 줍니다. imshow 는 여러분 짐작처럼 \"이미지를 보여줘\" 이런 뜻입니다."],"metadata":{"id":"0yl5gus2TbCJ"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","plt.imshow(x_train[0], cmap=plt.cm.binary)\n","plt.show()"],"metadata":{"id":"pre9OiI8Tb5q"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["이 데이터를 사진 이미지로 볼수 있을까요? 네 어렵지 않습니다. 파이썬의 matplotlib이라는 라이브러리를 쓰면 됩니다. import 명령어를 써서 라이브러리를 가져오고 plt 라는 이름을 줍니다. imshow 는 여러분 짐작처럼 \"이미지를 보여줘\" 이런 뜻입니다."],"metadata":{"id":"y-3FWRxnThhp"}},{"cell_type":"code","source":["print(y_train[0])"],"metadata":{"id":"1_XdtpbATg17"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train, x_test = x_train / 255.0, x_test / 255.0"],"metadata":{"id":"RkHiytE9S5cB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#신경망 만들기\n","\n","이제 이 훈련용 데이터를 이용해서 숫자를 읽을 수 있도록 신경망을 만들고 학습시켜보겠습니다. 어떤 신경망을 쓸 것인가 하는 것은 keras 라이브러리의 모델 중에 sequential 이라는 모델을 사용하겠습니다. 자세한 것은 앞으로 상세 강의에서 알려드리겠습니다만 대략의 모습은 이렇게 생겼습니다.\n","\n","<img src=\"https://3.bp.blogspot.com/-mDyzBzA4btg/V4_Z0f2mc7I/AAAAAAAAE3M/dtU8hT661fQWtnRC_JvIH_4qifQomZ4PACLcB/s1600/MNIST_neuralnet_image.png\">"],"metadata":{"id":"Iji2LOy0TBLR"}},{"cell_type":"markdown","source":["Keras의 model 함수(기능)을 이용해서 신경망을 만들어 줍니다."],"metadata":{"id":"o_jcEWQTTGBR"}},{"cell_type":"code","source":["model = tf.keras.models.Sequential([\n","  tf.keras.layers.Flatten(input_shape=(28, 28)),#사진 크기\n","  tf.keras.layers.Dense(100, activation='relu'),#밀집도?옵션인듯\n","  tf.keras.layers.Dropout(0.2),#얼마나 떨어트리냐?\n","  tf.keras.layers.Dense(10, activation='softmax')\n","])\n","#층을 쌓는 함수다.\n","model.compile(optimizer='adam',\n","              loss='sparse_categorical_crossentropy',\n","              metrics=['accuracy'])"],"metadata":{"id":"WD85LbUWS9MF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["출처 : https://hwiyong.tistory.com/95"],"metadata":{"id":"InzX5CQfbkxg"}},{"cell_type":"markdown","source":["다음은 여러가지 매개변수를 사용한 Dense층 객체 예시입니다.\n","\n"," # 시그모이드 활성화\n","layers.Dense(64, activation='sigmoid')\n","# 위와 같은 문장입니다.\n","layers.Dense(64, activation = tf.keras.activations.sigmoid)\n","\n","# 규제항 추가 입니다.\n","layers.Dense(64, kernel_regularizer=tf.keras.regularizers.l1(0.01))\n","layers.Dense(64, bias_regularizer=tf.keras.regularizers.l2(0.01))\n","\n","# 커널을 랜덤한 직교 행렬로 초기화한 층입니다.\n","layers.Dense(64, kernel_initializer='orthogonal')\n","\n","# 절편 벡터를 상수 2.0으로 설정\n","layers.Dense(64, bias_initializer=tf.keras.initializers.Constant(2.0))\n"," "],"metadata":{"id":"Q32Y3lDkZr7R"}},{"cell_type":"markdown","source":["#신경망 학습시키기\n","이제 신경망이 정의되었으니 학습시켜 봅시다."],"metadata":{"id":"jp6RCCgLTJWh"}},{"cell_type":"code","source":["model.fit(x_train, y_train, epochs=5)"],"metadata":{"id":"d_02E4JETFXf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.imshow(x_test[0], cmap=plt.cm.binary)\n","plt.show()"],"metadata":{"id":"R870ka9oTLhs"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["학습이 끝났습니다. 새로운 이미지를 읽을 수 있는지 테스트해 봅니다."],"metadata":{"id":"kWp8z9qGT2_K"}},{"cell_type":"code","source":["predictions = model.predict(x_test)"],"metadata":{"id":"fEYxbwbOT1Ha"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.imshow(x_test[0], cmap=plt.cm.binary)\n","plt.show()"],"metadata":{"id":"XnNbnuTDT6jr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print (predictions[0])"],"metadata":{"id":"LNTucGv7TNZ3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["이중 값이 가장 큰 것이 신경망이 낸 답이죠"],"metadata":{"id":"oJY2Fk5TT-Ib"}},{"cell_type":"code","source":["import numpy as np\n","print(np.argmax(predictions[0]))"],"metadata":{"id":"OfCO9pmuTP22"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["이것은 확률을 나타내는 값들입니다. 이 중 확률이 높다고 예측된 값을 출력해 본 것입니다. 전체 테스트 데이터에 대해 얼마나 잘 학습되었는지 측정해 봅니다."],"metadata":{"id":"N_anebJOT_96"}},{"cell_type":"code","source":["model.evaluate(x_test, y_test)"],"metadata":{"id":"f3OnIE_UT_fM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["학습된 숫자인식기는 이 데이터셋에서 약 97%의 정확도를 보여줍니다. 우리가 만든 코드의 원리와 더 다양한 응용들은 다음 강의들에서 다루겠지만 성미가 급해서 다음 강의까지 기다릴 수 없는 분들은 Francois Chollet의 책 [Deep Learning with Python](https://www.amazon.com/Deep-Learning-Python-Francois-Chollet/dp/1617294438)과 구글의 [TensorFlow 튜토리얼](https://www.tensorflow.org/beta/tutorials/)에 있는 여러가지 내용들을 공부해보세요."],"metadata":{"id":"yRHxKHlJUCcB"}},{"cell_type":"code","source":[],"metadata":{"id":"UiWAVV6xUD4I"},"execution_count":null,"outputs":[]}]}